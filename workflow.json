{
  "connections": {
    "googleAdmin": {
      "base": "https://admin.googleapis.com/admin/directory/v1",
      "auth": "Bearer {googleAccessToken}"
    },
    "googleCI": {
      "base": "https://cloudidentity.googleapis.com/v1",
      "auth": "Bearer {googleAccessToken}"
    },
    "graphGA": {
      "base": "https://graph.microsoft.com/v1.0",
      "auth": "Bearer {azureAccessToken}"
    },
    "graphBeta": {
      "base": "https://graph.microsoft.com/beta",
      "auth": "Bearer {azureAccessToken}"
    },
    "public": { "base": "", "auth": "none" }
  },
  "roles": {
    "dirDomainRW": [
      "https://www.googleapis.com/auth/admin.directory.domain",
      "https://www.googleapis.com/auth/siteverification"
    ],
    "dirOrgunitRW": ["https://www.googleapis.com/auth/admin.directory.orgunit"],
    "dirUserRW": ["https://www.googleapis.com/auth/admin.directory.user"],
    "dirRoleRW": [
      "https://www.googleapis.com/auth/admin.directory.rolemanagement"
    ],
    "ciInboundSso": [
      "https://www.googleapis.com/auth/cloud-identity.inboundsso"
    ],
    "graphAppRW": ["Application.ReadWrite.All"],
    "graphSyncRW": ["Synchronization.ReadWrite.All"],
    "graphPolicyRW": ["Policy.ReadWrite.ApplicationConfiguration"],
    "graphAppRole": ["AppRoleAssignment.ReadWrite.All"]
  },
  "endpoints": {
    "admin.getDomain": {
      "conn": "googleAdmin",
      "method": "GET",
      "path": "/customer/{customerId}/domains/{domainName}"
    },
    "admin.listDomains": {
      "conn": "googleAdmin",
      "method": "GET",
      "path": "/customer/{customerId}/domains"
    },
    "admin.postDomain": {
      "conn": "googleAdmin",
      "method": "POST",
      "path": "/customer/{customerId}/domains"
    },
    "admin.listOrgUnits": {
      "conn": "googleAdmin",
      "method": "GET",
      "path": "/customer/{customerId}/orgunits",
      "qs": { "type": "all" },
      "extract": { "orgUnits": "organizationUnits" }
    },
    "admin.listOUAutomation": {
      "conn": "googleAdmin",
      "method": "GET",
      "path": "/customer/{customerId}/orgunits",
      "qs": { "orgUnitPath": "/Automation", "type": "children" }
    },
    "admin.getOU": {
      "conn": "googleAdmin",
      "method": "GET",
      "path": "/customer/{customerId}/orgunits/{ouPath}"
    },
    "admin.postOU": {
      "conn": "googleAdmin",
      "method": "POST",
      "path": "/customer/{customerId}/orgunits"
    },
    "admin.getUser": {
      "conn": "googleAdmin",
      "method": "GET",
      "path": "/users/{email('azuread-provisioning', primaryDomain)}"
    },
    "admin.updateUser": {
      "conn": "googleAdmin",
      "method": "PUT",
      "path": "/users/{email('azuread-provisioning', primaryDomain)}"
    },
    "admin.postUser": {
      "conn": "googleAdmin",
      "method": "POST",
      "path": "/users"
    },
    "admin.listRoles": {
      "conn": "googleAdmin",
      "method": "GET",
      "path": "/customer/{customerId}/roles"
    },
    "admin.postRole": {
      "conn": "googleAdmin",
      "method": "POST",
      "path": "/customer/{customerId}/roles"
    },
    "admin.listPrivileges": {
      "conn": "googleAdmin",
      "method": "GET",
      "path": "/customer/{customerId}/roles/ALL/privileges"
    },
    "admin.getRoleAssign": {
      "conn": "googleAdmin",
      "method": "GET",
      "path": "/customer/{customerId}/roleassignments",
      "qs": { "roleId": "{adminRoleId}", "assignedTo": "{provisioningUserId}" }
    },
    "admin.postRoleAssign": {
      "conn": "googleAdmin",
      "method": "POST",
      "path": "/customer/{customerId}/roleassignments"
    },
    "ci.listSamlProfiles": {
      "conn": "googleCI",
      "method": "GET",
      "path": "/inboundSamlSsoProfiles"
    },
    "ci.createSamlProfile": {
      "conn": "googleCI",
      "method": "POST",
      "path": "/inboundSamlSsoProfiles"
    },
    "ci.getIdpCreds": {
      "conn": "googleCI",
      "method": "GET",
      "path": "/inboundSamlSsoProfiles/{samlProfileId}/idpCredentials"
    },
    "ci.addIdpCert": {
      "conn": "googleCI",
      "method": "POST",
      "path": "/inboundSamlSsoProfiles/{samlProfileId}/idpCredentials:add"
    },
    "ci.listSsoAssignments": {
      "conn": "googleCI",
      "method": "GET",
      "path": "/inboundSsoAssignments",
      "qs": { "parent": "{samlProfileId}" }
    },
    "ci.postSsoAssignment": {
      "conn": "googleCI",
      "method": "POST",
      "path": "/inboundSsoAssignments"
    },
    "graph.instantiateProv": {
      "conn": "graphGA",
      "method": "POST",
      "path": "/applicationTemplates/{provTemplateId}/instantiate"
    },
    "graph.instantiateSSO": {
      "conn": "graphGA",
      "method": "POST",
      "path": "/applicationTemplates/{ssoTemplateId}/instantiate"
    },
    "graph.appByTemplateProv": {
      "conn": "graphGA",
      "method": "GET",
      "path": "/applications",
      "qs": { "$filter": "applicationTemplateId eq '{provTemplateId}'" }
    },
    "graph.appByTemplateSSO": {
      "conn": "graphGA",
      "method": "GET",
      "path": "/applications",
      "qs": { "$filter": "applicationTemplateId eq '{ssoTemplateId}'" }
    },
    "graph.listAppTemplates": {
      "conn": "graphGA",
      "method": "GET",
      "path": "/applicationTemplates"
    },
    "graph.getSync": {
      "conn": "graphGA",
      "method": "GET",
      "path": "/servicePrincipals/{provServicePrincipalId}/synchronization"
    },
    "graph.patchSync": {
      "conn": "graphGA",
      "method": "PATCH",
      "path": "/servicePrincipals/{provServicePrincipalId}/synchronization",
      "headers": { "Content-Type": "application/json" }
    },
    "graph.startSyncJob": {
      "conn": "graphGA",
      "method": "POST",
      "path": "/servicePrincipals/{provServicePrincipalId}/synchronization/jobs/{jobId}/start"
    },
    "graph.getSamlSettings": {
      "conn": "graphBeta",
      "method": "GET",
      "path": "/servicePrincipals/{ssoServicePrincipalId}/samlSingleSignOnSettings"
    },
    "graph.patchSamlSettings": {
      "conn": "graphBeta",
      "method": "PATCH",
      "path": "/servicePrincipals/{ssoServicePrincipalId}/samlSingleSignOnSettings"
    },
    "graph.listPolicies": {
      "conn": "graphBeta",
      "method": "GET",
      "path": "/servicePrincipals/{ssoServicePrincipalId}/tokenIssuancePolicies"
    },
    "graph.createPolicy": {
      "conn": "graphBeta",
      "method": "POST",
      "path": "/policies/tokenIssuancePolicies"
    },
    "graph.linkPolicy": {
      "conn": "graphBeta",
      "method": "POST",
      "path": "/servicePrincipals/{ssoServicePrincipalId}/tokenIssuancePolicies/$ref"
    },
    "web.fetchMetadata": {
      "conn": "public",
      "method": "GET",
      "path": "https://login.microsoftonline.com/{tenantId}/federationmetadata/2007-06/federationmetadata.xml?appid={ssoAppId}"
    }
  },
  "checkers": {
    "exists": "$ != null",
    "fieldTruthy": "$.{field} == true",
    "eq": "$ == '{value}'"
  },
  "variables": {
    "customerId": {
      "validator": "^C[0-9a-f]{10,}$|^my_customer$",
      "default": "my_customer"
    },
    "domainName": {
      "validator": "^([\\w-]+\\.)+[A-Za-z]{2,}$",
      "default": "feeley.xyz",
      "_comment": "Manual override domain - defaults to feeley.xyz but can be changed"
    },
    "primaryDomain": {
      "_comment": "Primary domain fetched from Google Admin API on initialization"
    },
    "googleAccessToken": {},
    "azureAccessToken": {},
    "provisioningUserId": {},
    "provisioningUserEmail": {},
    "adminRoleId": {},
    "directoryServiceId": {},
    "samlProfileId": {},
    "entityId": {},
    "acsUrl": {},
    "provTemplateId": {
      "_comment": "Template ID for Google Cloud (Provisioning) App, looked up by display name"
    },
    "provTemplateName": {
      "default": "Google Cloud / G Suite Connector",
      "_comment": "Display name to lookup the provisioning application template"
    },
    "ssoTemplateId": {
      "_comment": "Template ID for Google Cloud SSO App, looked up by display name"
    },
    "ssoTemplateName": {
      "default": "Google Cloud",
      "_comment": "Display name to lookup the SSO application template"
    },
    "provServicePrincipalId": {},
    "ssoServicePrincipalId": {},
    "ssoAppId": {},
    "jobId": { "default": "Initial" },
    "claimsPolicyId": {},
    "principalId": {},
    "generatedPassword": {},
    "tenantId": {
      "_comment": "Microsoft tenant ID from environment configuration"
    },
    "rawXmlResponse": {
      "_comment": "Raw XML response fetched from federation metadata endpoint"
    },
    "manualStepsState": {
      "_comment": "JSON string storing completed manual steps"
    },
    "ouPath": {},
    "ouName": {}
  },
  "steps": [
    {
      "name": "Verify Primary Domain",
      "outputs": ["primaryDomain", "domainName"],
      "actions": [
        {
          "use": "admin.listDomains",
          "extract": {
            "primaryDomain": "$.domains[?(@.isPrimary)].domainName",
            "domainName": "$.domains[?(@.isPrimary)].domainName"
          }
        },
        {
          "use": "admin.getDomain",
          "checker": "fieldTruthy",
          "field": "verified"
        },
        {
          "use": "admin.postDomain",
          "payload": { "domainName": "{primaryDomain}" },
          "fallback": true
        }
      ],
      "role": "dirDomainRW"
    },
    {
      "name": "Create Automation Organizational Unit",
      "inputs": ["primaryDomain"],
      "outputs": ["ouPath"],
      "actions": [
        {
          "use": "admin.listOrgUnits",
          "extract": {
            "ouPath": "$.organizationUnits[?(@.name=='Automation')].orgUnitPath"
          }
        },
        {
          "use": "admin.postOU",
          "payload": { "name": "Automation", "parentOrgUnitPath": "/" },
          "extract": { "ouPath": "$.orgUnitPath" },
          "fallback": true
        }
      ]
    },
    {
      "name": "Create Service Account for Microsoft",
      "inputs": ["primaryDomain", "ouPath"],
      "outputs": [
        "provisioningUserId",
        "provisioningUserEmail",
        "generatedPassword"
      ],
      "actions": [
        {
          "use": "admin.getUser",
          "extract": {
            "provisioningUserId": "$.id",
            "provisioningUserEmail": "$.primaryEmail"
          }
        },
        {
          "use": "admin.updateUser",
          "payload": {
            "password": "{generateDeterministicPassword(primaryDomain)}"
          },
          "extract": {
            "generatedPassword": "{generateDeterministicPassword(primaryDomain)}"
          },
          "fallback": true
        },
        {
          "use": "admin.postUser",
          "payload": {
            "primaryEmail": "{email('azuread-provisioning', primaryDomain)}",
            "name": { "givenName": "Microsoft", "familyName": "Provisioning" },
            "password": "{generateDeterministicPassword(primaryDomain)}",
            "orgUnitPath": "{ouPath}"
          },
          "extract": {
            "provisioningUserId": "$.id",
            "provisioningUserEmail": "$.primaryEmail",
            "generatedPassword": "{generateDeterministicPassword(primaryDomain)}"
          },
          "fallback": true
        }
      ],
      "role": "dirUserRW",
      "depends_on": ["Create Automation Organizational Unit"]
    },
    {
      "name": "Setup Microsoft Sync Permissions",
      "inputs": ["customerId", "primaryDomain"],
      "outputs": ["adminRoleId", "directoryServiceId"],
      "actions": [
        {
          "use": "admin.listRoles",
          "checker": "exists",
          "extract": {
            "adminRoleId": "$.items[?(@.roleName=='Microsoft Entra Provisioning')].roleId",
            "directoryServiceId": "$.items[?(@.roleName=='Microsoft Entra Provisioning')].rolePrivileges[0].serviceId"
          }
        },
        {
          "use": "admin.listPrivileges",
          "extract": {
            "directoryServiceId": "$.items[?(@.privilegeName=='USERS_RETRIEVE')].serviceId"
          },
          "fallback": true
        },
        {
          "use": "admin.postRole",
          "payload": {
            "roleName": "Microsoft Entra Provisioning",
            "roleDescription": "Custom role for Microsoft Entra provisioning service",
            "rolePrivileges": [
              {
                "serviceId": "{directoryServiceId}",
                "privilegeName": "USERS_RETRIEVE"
              },
              {
                "serviceId": "{directoryServiceId}",
                "privilegeName": "USERS_CREATE"
              },
              {
                "serviceId": "{directoryServiceId}",
                "privilegeName": "USERS_UPDATE"
              },
              {
                "serviceId": "{directoryServiceId}",
                "privilegeName": "GROUPS_RETRIEVE"
              },
              {
                "serviceId": "{directoryServiceId}",
                "privilegeName": "GROUPS_CREATE"
              },
              {
                "serviceId": "{directoryServiceId}",
                "privilegeName": "ORG_UNITS_RETRIEVE"
              }
            ]
          },
          "extract": { "adminRoleId": "$.roleId" },
          "fallback": true
        },
        { "use": "admin.getRoleAssign", "checker": "exists" },
        {
          "use": "admin.postRoleAssign",
          "payload": {
            "roleId": "{adminRoleId}",
            "assignedTo": "{email('azuread-provisioning', primaryDomain)}",
            "scopeType": "CUSTOMER"
          },
          "fallback": true
        }
      ],
      "role": "dirRoleRW",
      "depends_on": ["Create Service Account for Microsoft"]
    },
    {
      "name": "Configure Google SAML Profile",
      "outputs": ["samlProfileId", "entityId", "acsUrl"],
      "verify": [{ "use": "ci.listSamlProfiles", "checker": "exists" }],
      "execute": [
        {
          "use": "ci.createSamlProfile",
          "payload": {
            "displayName": "Azure AD",
            "idpConfig": {
              "entityId": "{url('https://sts.windows.net', tenantId)}/",
              "singleSignOnServiceUri": "{url('https://login.microsoftonline.com', concat(tenantId, '/saml2'))}"
            }
          },
          "extract": {
            "samlProfileId": "$.name",
            "entityId": "$.idpConfig.entityId",
            "acsUrl": "$.spConfig.acsUri"
          },
          "longRunning": true
        }
      ],
      "role": "ciInboundSso",
      "depends_on": ["Setup Microsoft Sync Permissions"],
      "apiStatus": "beta"
    },
    {
      "name": "Create Microsoft Apps",
      "outputs": [
        "provServicePrincipalId",
        "ssoServicePrincipalId",
        "ssoAppId"
      ],
      "execute": [
        {
          "use": "graph.listAppTemplates",
          "qs": { "$filter": "displayName eq '{provTemplateName}'" },
          "extract": { "provTemplateId": "$.value[0].id" }
        },
        {
          "use": "graph.listAppTemplates",
          "qs": { "$filter": "displayName eq '{ssoTemplateName}'" },
          "extract": { "ssoTemplateId": "$.value[0].id" }
        },
        {
          "use": "graph.instantiateProv",
          "payload": { "displayName": "{provTemplateName}" },
          "extract": { "provServicePrincipalId": "$.servicePrincipal.id" }
        },
        {
          "use": "graph.instantiateSSO",
          "payload": { "displayName": "{ssoTemplateName}" },
          "extract": {
            "ssoServicePrincipalId": "$.servicePrincipal.id",
            "ssoAppId": "$.application.appId"
          }
        }
      ],
      "role": "graphAppRW",
      "depends_on": ["Configure Google SAML Profile"]
    },
    {
      "name": "Configure Microsoft Sync and SSO",
      "inputs": [
        "generatedPassword",
        "entityId",
        "acsUrl",
        "provServicePrincipalId",
        "ssoServicePrincipalId"
      ],
      "outputs": ["claimsPolicyId"],
      "verify": [
        { "use": "graph.getSync", "checker": "exists" },
        {
          "use": "graph.getSamlSettings",
          "checker": "eq",
          "value": "{entityId}",
          "jsonPath": "$.identifierUris[0]"
        }
      ],
      "execute": [
        {
          "use": "graph.patchSync",
          "payload": {
            "secrets": [
              {
                "key": "BaseAddress",
                "value": "https://admin.googleapis.com/admin/directory/v1"
              },
              { "key": "SecretKey", "value": "{generatedPassword}" }
            ]
          }
        },
        { "use": "graph.startSyncJob" },
        {
          "use": "graph.patchSamlSettings",
          "payload": {
            "identifierUris": ["{entityId}"],
            "replyUrls": ["{acsUrl}"]
          }
        }
      ],
      "role": "graphSyncRW",
      "depends_on": ["Create Microsoft Apps"]
    },
    {
      "name": "Setup Microsoft Claims Policy",
      "inputs": ["ssoServicePrincipalId"],
      "outputs": ["claimsPolicyId"],
      "verify": [{ "use": "graph.listPolicies", "checker": "exists" }],
      "execute": [
        {
          "use": "graph.createPolicy",
          "payload": {
            "displayName": "Google Workspace Basic Claims",
            "definition": [
              {
                "ClaimsMappingPolicy": {
                  "Version": 1,
                  "IncludeBasicClaimSet": true,
                  "ClaimsMapping": { "email": { "source": "user", "id": "mail" } }
                }
              }
            ]
          },
          "extract": { "claimsPolicyId": "$.id" }
        },
        {
          "use": "graph.linkPolicy",
          "payload": {
            "@odata.id": "{url('https://graph.microsoft.com/beta/policies/tokenIssuancePolicies', claimsPolicyId)}"
          }
        }
      ],
      "role": "graphPolicyRW",
      "depends_on": ["Configure Microsoft Sync and SSO"],
      "apiStatus": "beta"
    },
    {
      "name": "Complete Google SSO Setup",
      "inputs": ["tenantId", "ssoAppId", "samlProfileId"],
      "verify": [
        { "use": "ci.getIdpCreds", "checker": "exists" },
        { "use": "ci.listSsoAssignments", "checker": "exists" }
      ],
      "execute": [
        { "use": "web.fetchMetadata", "extract": { "rawXmlResponse": "$" } },
        {
          "use": "ci.addIdpCert",
          "payload": {
            "pemData": "{extractCertificateFromXml(rawXmlResponse)}"
          }
        },
        {
          "use": "ci.postSsoAssignment",
          "payload": {
            "ssoProfile": "{samlProfileId}",
            "targetOrgUnit": "/",
            "ssoMode": "SAML_SSO"
          }
        },
        {
          "use": "ci.postSsoAssignment",
          "payload": {
            "ssoProfile": "{samlProfileId}",
            "targetOrgUnit": "/Automation",
            "ssoMode": "SSO_OFF"
          }
        }
      ],
      "role": "ciInboundSso",
      "depends_on": ["Setup Microsoft Claims Policy"]
    },
    {
      "name": "Assign Users to SSO App",
      "manual": true,
      "depends_on": ["Complete Google SSO Setup"]
    },
    {
      "name": "Test SSO Configuration",
      "manual": true,
      "depends_on": ["Assign Users to SSO App"]
    }
  ]
}
